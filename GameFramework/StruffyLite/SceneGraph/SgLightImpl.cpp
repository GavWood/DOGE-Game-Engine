////////////////////////////////////////////////////////////////////////////////
/// SgLightDX11.cpp

#include "BaArchive.h"
#include "SgLightImpl.h"
#include "BaFileData.h"

////////////////////////////////////////////////////////////////////////////////
// Constructor

SgLightDX11::SgLightDX11()
{
}

////////////////////////////////////////////////////////////////////////////////
// FixPointers

void SgLightDX11::FixPointers( BtU8* pMemory )
{
	// Set the file data
	m_pFileData = (BaSgLightFileData*) pMemory;
}

////////////////////////////////////////////////////////////////////////////////
// IsCone

BtBool SgLightDX11::IsCone() const
{
	if( m_pFileData->m_type == RsLT_Cone )
	{
		return BtTrue;
	}
	return BtFalse;
}

////////////////////////////////////////////////////////////////////////////////
// IsPoint

BtBool SgLightDX11::IsPoint() const
{
	if( m_pFileData->m_type == RsLT_Point )
	{
		return BtTrue;
	}
	return BtFalse;
}

////////////////////////////////////////////////////////////////////////////////
// IsDirectional

BtBool SgLightDX11::IsDirectional() const
{
	if( m_pFileData->m_type == RsLT_Direction )
	{
		return BtTrue;
	}
	return BtFalse;
}

////////////////////////////////////////////////////////////////////////////////
// pNode

SgNode* SgLightDX11::pNode() const
{
	return m_pNode;
}

////////////////////////////////////////////////////////////////////////////////
// GetColour

RsColour& SgLightDX11::GetColour() const
{
	return m_pFileData->m_colour;
}

////////////////////////////////////////////////////////////////////////////////
// SetColour

void SgLightDX11::SetColour( const RsColour& colour )
{
	m_pFileData->m_colour = colour;
}

////////////////////////////////////////////////////////////////////////////////
// GetEnabled

BtBool SgLightDX11::GetEnabled() const
{
	if( m_pFileData->m_isLit )
	{
		return BtTrue;
	}
	return BtFalse;
}

////////////////////////////////////////////////////////////////////////////////
// GetInnerAngle

BtFloat SgLightDX11::GetInnerAngle() const
{
	return m_pFileData->m_fallOffAngle;
}

////////////////////////////////////////////////////////////////////////////////
// SetEnabled

void SgLightDX11::SetEnabled( BtBool enabled )
{
	m_pFileData->m_isLit = enabled;
}

////////////////////////////////////////////////////////////////////////////////
// SetEnabled

BtFloat SgLightDX11::GetIntensity() const
{
	return m_pFileData->m_intensity;
}

////////////////////////////////////////////////////////////////////////////////
// SetEnabled

void SgLightDX11::SetIntensity( BtFloat intensity )
{
	m_pFileData->m_intensity = intensity;
}
